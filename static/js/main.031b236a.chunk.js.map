{"version":3,"sources":["App.js","index.js"],"names":["colors","Item","data","itemIdx","className","style","backgroundColor","color","text","App","masonryContainerRef","React","useRef","useState","containerWidth","setContainerWidth","items","setItems","gutterWidth","setGutterWidth","columnWidth","setColumnWidth","virtualBoundTop","setVirtualBoundTop","virtualBoundBottom","setVirtualBoundBottom","flexible","setFlexible","virtualize","setVirtualize","breakPoints","setBreakPoints","handleIncrementItems","count","num","newItems","Array","from","length","map","wordCount","faker","datatype","number","random","words","prevItems","useEffect","label","value","onChange","e","target","breakpoint","type","name","min","step","max","Number","checked","prevState","flex","minWidth","htmlFor","onClick","resetItems","slice","current","scrollTop","ref","width","comp","minCols","virtualBoundsTop","virtualBoundsBottom","scrollContainer","loadItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.031b236a.chunk.js","sourcesContent":["import React from 'react';\nimport faker from 'faker';\nimport Masonry from 'react-grid-masonry';\nimport './App.css';\n\nconst colors = ['#D2B4DE', '#A9CCE3', '#AED6F1', '#A3E4D7', '#A2D9CE', '#A9DFBF', '#ABEBC6'];\n\nfunction generateFakeData(num) {\n  return Array.from({ length: num }).map(() => {\n    let wordCount = faker.datatype.number(50);\n    return {\n      text: faker.random.words(wordCount),\n      color: colors[faker.datatype.number(colors?.length - 1)],\n    };\n  });\n}\n\nfunction Item({ data, itemIdx }) {\n  return (\n    <div className=\"item\" style={{ backgroundColor: data.color }}>\n      {itemIdx}:{data.text}\n    </div>\n  );\n}\n\nfunction fetchBreakpoints() {\n  return [\n    { label: 'Auto(100%)', value: '100%' },\n    { label: 'Mobile(small)', value: '320px' },\n    { label: 'Mobile(medium)', value: '375px' },\n    { label: 'Mobile(large)', value: '425px' },\n    { label: 'Tablet', value: '768px' },\n    { label: 'Laptop', value: '1024px' },\n    { label: 'Laptop(large)', value: '1440px' },\n    { label: 'Desktop/4k', value: '2560px' },\n  ];\n}\n\nfunction App() {\n  const masonryContainerRef = React.useRef();\n  const [containerWidth, setContainerWidth] = React.useState('100%');\n  const [items, setItems] = React.useState([]);\n  const [gutterWidth, setGutterWidth] = React.useState(5);\n  const [columnWidth, setColumnWidth] = React.useState(250);\n  const [virtualBoundTop, setVirtualBoundTop] = React.useState(250);\n  const [virtualBoundBottom, setVirtualBoundBottom] = React.useState(250);\n  const [flexible, setFlexible] = React.useState(true);\n  const [virtualize, setVirtualize] = React.useState(true);\n  const [breakPoints, setBreakPoints] = React.useState([]);\n\n  const handleIncrementItems = (count) => {\n    let newItems = generateFakeData(count);\n    setItems((prevItems) => [...prevItems, ...newItems]);\n  };\n\n  const handleGutterWidthChange = (e) => {\n    let value = e.target.value;\n    if (value > 0 && value < 50) {\n      setGutterWidth(e.target.value);\n    }\n  };\n\n  const handleReset = () => {\n    const resetItems = items.slice(0, 150);\n    setItems(resetItems);\n    setContainerWidth('100%');\n    setFlexible(true);\n    setVirtualize(true);\n    setGutterWidth(5);\n    setColumnWidth(250);\n    setVirtualBoundTop(250);\n    setVirtualBoundBottom(250);\n    masonryContainerRef.current.scrollTop = 0;\n  };\n\n  React.useEffect(() => {\n    handleIncrementItems(150);\n    setBreakPoints(fetchBreakpoints());\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"toolbar\">\n        <div className=\"section\">\n          <div>Total Items:</div>\n          <div>{items.length}</div>\n        </div>\n\n        <div className=\"section\">\n          <div>Breakpoints:</div>\n          <div className=\"btn-group\">\n            <select value={containerWidth} onChange={(e) => setContainerWidth(e.target.value)}>\n              {breakPoints.map((breakpoint) => {\n                return <option value={breakpoint.value}>{breakpoint.label}</option>;\n              })}\n            </select>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div>Column Width:</div>\n          <input\n            type=\"number\"\n            name=\"virtualboundtop\"\n            min=\"100\"\n            step=\"10\"\n            max=\"500\"\n            value={columnWidth}\n            onChange={(e) => {\n              setColumnWidth(Number(e.target.value));\n            }}\n          />\n        </div>\n        <div className=\"section\">\n          <div>Gutter Width:</div>\n          <input type=\"number\" min=\"0\" value={gutterWidth} onChange={handleGutterWidthChange} />\n        </div>\n        <div className=\"section\">\n          <div>Flexible:</div>\n          <input\n            type=\"checkbox\"\n            name=\"flexible\"\n            value=\"flexible\"\n            checked={flexible}\n            onChange={(e) => {\n              setFlexible((prevState) => !prevState);\n            }}\n          />\n        </div>\n        <div className=\"section\">\n          <div>Virtualize:</div>\n          <input\n            type=\"checkbox\"\n            name=\"virtualize\"\n            value=\"virtualize\"\n            checked={virtualize}\n            onChange={(e) => {\n              setVirtualize((prevState) => !prevState);\n            }}\n          />\n        </div>\n\n        <div className=\"section\" style={{ flex: 3, minWidth: '150px' }}>\n          <div>VirtualBound:</div>\n          <label htmlFor=\"\">\n            top\n            <input\n              type=\"number\"\n              name=\"virtualboundtop\"\n              value={virtualBoundTop}\n              onChange={(e) => {\n                setVirtualBoundTop(Number(e.target.value));\n              }}\n            />\n          </label>\n          <label htmlFor=\"\">\n            bottom\n            <input\n              type=\"number\"\n              name=\"virtualBoundBottom\"\n              value={virtualBoundBottom}\n              onChange={(e) => {\n                setVirtualBoundBottom(Number(e.target.value));\n              }}\n            />\n          </label>\n        </div>\n        <button className=\"btn\" onClick={handleReset}>\n          Reset\n        </button>\n      </div>\n      <div\n        className=\"masonry-container\"\n        ref={masonryContainerRef}\n        style={{ width: containerWidth }}\n      >\n        <Masonry\n          comp={Item}\n          items={items}\n          columnWidth={columnWidth}\n          gutterWidth={gutterWidth}\n          minCols={1}\n          flexible={flexible}\n          virtualize={virtualize}\n          virtualBoundsTop={virtualBoundTop}\n          virtualBoundsBottom={virtualBoundBottom}\n          scrollContainer={() => masonryContainerRef.current}\n          loadItems={({ from }) => {\n            handleIncrementItems(50);\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}